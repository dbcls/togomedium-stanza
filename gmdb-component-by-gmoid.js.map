{"version":3,"file":"gmdb-component-by-gmoid.js","sources":["../../../home/runner/work/togomedium-stanza/togomedium-stanza/stanzas/gmdb-component-by-gmoid/components/StanzaView.tsx","../../../home/runner/work/togomedium-stanza/togomedium-stanza/stanzas/gmdb-component-by-gmoid/utils/api.ts","../../../home/runner/work/togomedium-stanza/togomedium-stanza/stanzas/gmdb-component-by-gmoid/App.tsx","../../../home/runner/work/togomedium-stanza/togomedium-stanza/stanzas/gmdb-component-by-gmoid/index.tsx"],"sourcesContent":["import { css } from \"@emotion/react\";\nimport styled from \"@emotion/styled\";\nimport React, { FC } from \"react\";\nimport { AcceptsEmotion } from \"yohak-tools\";\nimport {\n  ColorButton,\n  ColWrapper,\n  InfoId,\n  InfoTitle,\n  StandardParagraph,\n  SubHeading,\n  TagList,\n} from \"../../../shared/components/info-detail/styles\";\nimport { WikipediaData, WikipediaView } from \"../../../shared/components/info-detail/WikipediaView\";\nimport { stanzaWrapper } from \"../../../shared/styles/common\";\nimport { COLOR_PRIMARY } from \"../../../shared/styles/variables\";\nimport { decodeHTMLEntities } from \"../../../shared/utils/string\";\nimport { ComponentClass, LinkInfo } from \"../utils/api\";\n\ntype Props = {\n  prefLabel: string;\n  gmoId: string;\n  altLabels: string[];\n  properties: ComponentClass[];\n  roles: ComponentClass[];\n  superClasses: ComponentClass[];\n  subClasses: ComponentClass[];\n  links: LinkInfo[];\n  wikipediaData?: WikipediaData;\n} & AcceptsEmotion;\n\nexport const StanzaView: FC<Props> = ({\n  css,\n  className,\n  prefLabel,\n  gmoId,\n  altLabels,\n  properties,\n  roles,\n  superClasses,\n  subClasses,\n  links,\n  wikipediaData,\n}) => {\n  return (\n    <div css={[stanzaView, css, stanzaWrapper]} className={className}>\n      <ColWrapper>\n        <div>\n          <InfoId>\n            <span>GMO ID: </span>\n            <span>{gmoId}</span>\n          </InfoId>\n          <InfoTitle>{decodeHTMLEntities(prefLabel)}</InfoTitle>\n          {!!altLabels.length && (\n            <StandardParagraph>\n              Alternative labels:\n              <br />\n              {altLabels.map((str, i, arr) => (\n                <span key={str}>{`${decodeHTMLEntities(str)}${addLastComma(i, arr)}`}</span>\n              ))}\n            </StandardParagraph>\n          )}\n          <div>\n            {!!properties.length && (\n              <>\n                <SubHeading>Component types</SubHeading>\n                <StandardParagraph>\n                  {properties.map((item, i, arr) => (\n                    <span key={i}>{`${item.label_en}${addLastComma(i, arr)}`}</span>\n                  ))}\n                </StandardParagraph>\n              </>\n            )}\n            {!!roles.length && (\n              <>\n                <SubHeading>Roles</SubHeading>\n                <ul>\n                  {roles.map((item, i) => (\n                    <li key={i}>{item.label_en}</li>\n                  ))}\n                </ul>\n              </>\n            )}\n            {!!superClasses.length && (\n              <>\n                <SubHeading>Super classes</SubHeading>\n                <LinkList>\n                  {superClasses.map((item, i) => (\n                    <li key={i}>\n                      <a href={`/component/${item.gmo_id}`}>{item.gmo_id}</a>\n                      <span>{decodeHTMLEntities(item.label_en)}</span>\n                    </li>\n                  ))}\n                </LinkList>\n              </>\n            )}\n            {!!subClasses.length && (\n              <>\n                <SubHeading>Sub classes</SubHeading>\n                <LinkList>\n                  {subClasses.map((item, i) => (\n                    <li key={i}>\n                      <a href={`/component/${item.gmo_id}`}>{item.gmo_id}</a>\n                      <span>{decodeHTMLEntities(item.label_en)}</span>\n                    </li>\n                  ))}\n                </LinkList>\n              </>\n            )}\n            {!!links.length && (\n              <>\n                <SubHeading>Cross references</SubHeading>\n                <TagList>\n                  {links.map((item, i) => (\n                    <ColorButton key={i} href={item.uri} target=\"_blank\" rel=\"noreferrer\">\n                      {item.label}\n                    </ColorButton>\n                  ))}\n                </TagList>\n              </>\n            )}\n          </div>\n        </div>\n        {wikipediaData && <WikipediaView {...wikipediaData} />}\n      </ColWrapper>\n    </div>\n  );\n};\n\nconst addLastComma = (index: number, arr: any[]): \"\" | \", \" => {\n  return index === arr.length - 1 ? \"\" : \", \";\n};\n\nconst LinkList = styled.ul`\n  li {\n    display: flex;\n    gap: 8px;\n  }\n\n  a {\n    color: ${COLOR_PRIMARY};\n  }\n`;\n\nconst stanzaView = css``;\n","import { ComponentProps } from \"react\";\nimport { Nullable, Optional } from \"yohak-tools\";\nimport { getData } from \"../../../shared/utils/getData\";\nimport { URL_API } from \"../../../shared/utils/variables\";\nimport { StanzaView } from \"../components/StanzaView\";\n\nexport type ViewProps = ComponentProps<typeof StanzaView>;\ntype ApiBody = {\n  pref_label: string;\n  id: string;\n  label_ja: string;\n  alt_labels_en: string[];\n  alt_labels_ja: string[];\n  super_classes: ComponentClass[];\n  sub_classes: ComponentClass[];\n  properties: ComponentClass[];\n  roles: ComponentClass[];\n  links: string[];\n};\n\ntype LinkLabel = \"PubChem\" | \"Wikipedia\" | \"NCI Thesaurus\" | \"ChEBI\" | \"SNOMED-CT\";\nexport type LinkInfo = {\n  label: LinkLabel;\n  uri: string;\n};\n\nexport type ComponentClass = {\n  gmo_id: string;\n  uri: string;\n  label_en: string;\n};\n\nconst getLinkLabel = (link: string): Nullable<LinkLabel> => {\n  switch (true) {\n    case /pccompound/.test(link):\n      return \"PubChem\";\n    case /wikipedia/.test(link):\n      return \"Wikipedia\";\n    case /ncicb/.test(link):\n      return \"NCI Thesaurus\";\n    case /CHEBI/.test(link):\n      return \"ChEBI\";\n    case /SNOMEDCT/.test(link):\n      return \"SNOMED-CT\";\n    default:\n      return null;\n  }\n};\n\nconst parseData = (body: ApiBody): ViewProps => {\n  return {\n    prefLabel: body.pref_label,\n    gmoId: body.id,\n    altLabels: body.alt_labels_en,\n    properties: body.properties,\n    roles: body.roles,\n    superClasses: body.super_classes,\n    subClasses: body.sub_classes,\n    links: body.links\n      .filter((str) => !!getLinkLabel(str))\n      .map((str) => ({\n        label: getLinkLabel(str)!,\n        uri: str,\n      })),\n  };\n};\n\nexport const getComponentData = async (gmo_id: string): Promise<Optional<ViewProps>> => {\n  const apiName = \"gmdb_component_by_gmoid\";\n  const result = await getData<ApiBody>(`${URL_API}${apiName}`, { gmo_id });\n  if (result.body?.id) {\n    return parseData(result.body);\n  } else {\n    return undefined;\n  }\n};\n","import React, { FC, useEffect, useState } from \"react\";\nimport { StanzaView } from \"./components/StanzaView\";\nimport { getComponentData, ViewProps } from \"./utils/api\";\nimport { fetchWikipediaData } from \"../../shared/components/info-detail/WikipediaView\";\n\ntype Props = {\n  stanzaElement?: Document;\n  gmo_id: string;\n};\n\nconst App: FC<Props> = ({ gmo_id }) => {\n  const [props, setProps] = useState<ViewProps>(makeEmptyProps());\n  useEffect(() => {\n    (async () => {\n      const result = await getComponentData(gmo_id);\n      if (!result) return;\n      setProps(result);\n      const wikipediaLink = result.links.find((item) => item.label === \"Wikipedia\");\n      if (wikipediaLink) {\n        const wikipediaData = await fetchWikipediaData(wikipediaLink.uri);\n        setProps({ ...result, wikipediaData });\n      }\n    })();\n  }, [gmo_id]);\n  return <StanzaView {...props} />;\n};\n\nexport default App;\n\nconst makeEmptyProps = (): ViewProps => ({\n  prefLabel: \"\",\n  gmoId: \"\",\n  altLabels: [],\n  properties: [],\n  roles: [],\n  superClasses: [],\n  subClasses: [],\n  links: [],\n});\n","import { ThemeProvider } from \"@mui/material/styles\";\nimport React, { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { RecoilRoot } from \"recoil\";\nimport Stanza from \"togostanza/stanza\";\nimport App from \"./App\";\nimport { EmotionCacheProvider } from \"../../shared/components/EmotionCacheProvider\";\nimport { muiTheme } from \"../../shared/components/muiTheme\";\nimport { importWebFontForTogoMedium } from \"../../shared/utils/stanza\";\n\nexport default class HelloReact extends Stanza<StanzaParameters> {\n  async render() {\n    this._render();\n    importWebFontForTogoMedium(this);\n  }\n\n  handleAttributeChange() {\n    this._render();\n  }\n\n  _render() {\n    const main = this.root.querySelector(\"main\");\n    const gmo_id = this.params.gmo_id;\n    ReactDOM.render(\n      <StrictMode>\n        <RecoilRoot>\n          <ThemeProvider theme={muiTheme}>\n            <EmotionCacheProvider>\n              <App stanzaElement={this.root} gmo_id={gmo_id} />\n            </EmotionCacheProvider>\n          </ThemeProvider>\n        </RecoilRoot>\n      </StrictMode>,\n      main\n    );\n  }\n}\n\ntype StanzaParameters = {\n  gmo_id: string;\n};\n"],"names":["_jsx","_jsxs","_Fragment","styled","useState","useEffect","StrictMode","RecoilRoot"],"mappings":"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"}